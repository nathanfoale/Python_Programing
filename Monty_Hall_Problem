#Counter-Intuitive Conditional Probability
#By switching your choice, you go from a 1/3 probability of chosing the car to 2/3
import random

# Define the number of simulations and initialize the win counts for each strategy
num_simulations = 100000
stay_wins = 0
switch_wins = 0

# Run the simulations
for i in range(num_simulations):
    # Randomly assign the car behind one of the three doors
    doors = ["goat", "goat", "car"]
    random.shuffle(doors)
    
    # Contestant picks a door
    contestant_choice = random.choice(doors)
    
    # Host opens one of the other doors to reveal a goat
    available_doors = [door for door in doors if door != contestant_choice]
    goat_doors = [door for door in available_doors if door == "goat"]
    if goat_doors:
        host_choice = random.choice(goat_doors)
    else:
        # In the rare case where both unselected doors have cars, open a random door
        host_choice = random.choice(available_doors)
    
    # Check if the contestant wins by staying or switching
    if contestant_choice == "car":
        stay_wins += 1
    elif available_doors[0] == "car":
        switch_wins += 1

# Print the results
print("Wins if staying: ", stay_wins)
print("Wins if switching: ", switch_wins)
